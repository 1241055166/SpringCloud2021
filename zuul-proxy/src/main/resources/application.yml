server:
  port: 8801
spring:
  application:
    name: zuul-proxy
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8001/eureka/
zuul:
  routes: #给服务配置路由
    user-service:
      path: /userService/**   #请求路由到user-service服务
    feign-service:
      path: /feignService/**   #请求路由到feign-service服务
#  ignored-services: user-service,feign-service #关闭默认路由配置
#  prefix: /proxy #给网关路由添加前缀
  sensitive-headers: Cookie,Set-Cookie,Authorization #配置过滤敏感的请求头信息，设置为空就不会过滤
  add-host-header: true #设置为true重定向是会添加host请求头
  PreLogFilter:
    pre:
      disable: true #控制是否启用过滤器
management:   #开启查看路由的端点
  endpoints:
    web:
      exposure:
        include: 'routes'

#由于Zuul自动集成了Ribbon和Hystrix，所以Zuul天生就有负载均衡和服务容错能力
#可以使用Hystrix的配置来设置路由转发时HystrixCommand的执行超时时间
hystrix:
  command: #用于控制HystrixCommand的行为
    default:
      execution:
        isolation:
          thread:
            timeoutInMilliseconds: 1000 #配置HystrixCommand执行的超时时间，执行超过该时间会进行服务降级处理

#可以使用Ribbon的配置来设置路由转发时请求连接及处理的超时时间：
ribbon: #全局配置
  ConnectTimeout: 1000 #服务请求连接超时时间（毫秒）
  ReadTimeout: 3000 #服务请求处理超时时间（毫秒）